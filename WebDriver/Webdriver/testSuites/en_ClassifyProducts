#This test suites contains following aspects:
#1)Contention Verification: This is to test if all the elements are in that page and no picture etc missing.
#2)Test the content for 'Help' is complete;
#3)Test the add element function(create category, subcategory, keywords)
#4)Test the function of modifying the name of category,subcategory and keywords
#5)Test the Drag And Drop function
#6)Please note: Deleting testing is not been implemented in this test. After testing, please delete the newly created items.
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver import ActionChains
import unittest, time, re
import HTMLTestRunner
from Webdriver.all_globals import *
from Webdriver.testCase.functionalTesting.ClassifyProduct import en_ClassifyProducts_ContentVerification as TestCase1
from Webdriver.testCase.functionalTesting.ClassifyProduct import en_ClassifyProducts_ContentVerification_Help as TestCase2
from Webdriver.testCase.functionalTesting.ClassifyProduct import en_ClassifyProducts_Function_CategoryOption as TestCase3
from Webdriver.testCase.functionalTesting.ClassifyProduct import en_ClassifyProducts_Function_SubCategoryOption as TestCase4
from Webdriver.testCase.functionalTesting.ClassifyProduct import en_ClassifyProducts_Function_KeywordOption as TestCase5
from Webdriver.testCase.functionalTesting.ClassifyProduct import en_ClassifyProducts_Function_addElement as TestCase6
from Webdriver.testCase.functionalTesting.ClassifyProduct import en_ClassifyProducts_Function_DragAndDrop as TestCase7


def setUp(self):
    gb_setUp(self)

#Test Case1: Content Verification
class EnClassifyProductsContentVerification(TestCase1.EnClassifyProductsContentVerification):
    def test_en_classify_products_content_verification(self):
        TestCase1.EnClassifyProductsContentVerification.test_en_classify_products_content_verification(self)
#Test Case2: Help content verification
class EnClassifyProductsContentVerificationHelp(TestCase2.EnClassifyProductsContentVerificationHelp):
    def test_en_classify_products_content_verification_help(self):
        TestCase2.EnClassifyProductsContentVerificationHelp.test_en_classify_products_content_verification_help(self)

#Test Case3: Category Option
class EnClassifyProductsFunctionCategoryOption(TestCase3.EnClassifyProductsFunctionCategoryOption):
    def test_en_classify_products_function_category_option(self):
        TestCase3.EnClassifyProductsFunctionCategoryOption.test_en_classify_products_function_category_option(self)

#Test Case4: SubCategory Option
class EnClassifyProductsFunctionSubCategoryOption(TestCase4.EnClassifyProductsFunctionSubCategoryOption):
    def test_en_classify_products_function_sub_option(self):
        TestCase4.EnClassifyProductsFunctionSubCategoryOption.test_en_classify_products_function_sub_option(self)

#Test Case5: Keyword Option
class EnClassifyProductsFunctionKeywordOption(TestCase5.EnClassifyProductsFunctionKeywordOption):
    def test_en_classify_products_function_keyword_option(self):
        TestCase5.EnClassifyProductsFunctionKeywordOption.test_en_classify_products_function_keyword_option(self)

#Test Case6: Add Element
class EnClassifyProductsFunctionAddElement(TestCase6.EnClassifyProductsFunctionAddElement):
    def test_en_classify_products_function_add_element(self):
        TestCase6.EnClassifyProductsFunctionAddElement.test_en_classify_products_function_add_element(self)


#Test Case7: Drag and Drop
#Note: drag and drop test case still has some problem.
class EnClassifyProductsFunctionDragAndDrop(TestCase7.EnClassifyProductsFunctionDragAndDrop):
    def test_en_classify_products_function_drag_and_drop(self):
        TestCase7.EnClassifyProductsFunctionDragAndDrop.test_en_classify_products_function_drag_and_drop(self)

    
    def is_element_present(self, how, what):
        try: self.driver.find_element(by=how, value=what)
        except NoSuchElementException, e: return False
        return True
    
    def tearDown(self):
        self.driver.quit()
        self.assertEqual([], self.verificationErrors)

if __name__ == "__main__":
    testsuite = unittest.TestSuite()

    testsuite.addTest(EnClassifyProductsContentVerification("test_en_classify_products_content_verification"))
    testsuite.addTest(EnClassifyProductsContentVerificationHelp("test_en_classify_products_content_verification_help"))
    testsuite.addTest(EnClassifyProductsFunctionCategoryOption("test_en_classify_products_function_category_option"))
    testsuite.addTest(EnClassifyProductsFunctionSubCategoryOption("test_en_classify_products_function_sub_option"))
    testsuite.addTest(EnClassifyProductsFunctionKeywordOption("test_en_classify_products_function_keyword_option"))
    testsuite.addTest(EnClassifyProductsFunctionAddElement("test_en_classify_products_function_add_element"))
    testsuite.addTest(EnClassifyProductsFunctionDragAndDrop("test_en_classify_products_function_drag_and_drop"))


    filename = gb_filename_prefix+'/ClassifyProducts.html'
    fp = file(filename,'wb')

    runner = HTMLTestRunner.HTMLTestRunner(
            stream=fp,
            title='Test Result',
            description='Test Report'
            )
 #   runner = unittest.TextTestRunner()
    runner.run(testsuite)
